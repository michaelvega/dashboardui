{"version":3,"sources":["containers/Quiz/SingleQuestion.js","containers/Quiz/MultipleQuestion.js","containers/Quiz/Question.js","containers/Quiz/GettingStartedQuiz.js","containers/Quiz/SingleQuiz.js","components/utility/layoutWrapper.style.js","components/utility/layoutWrapper.js","components/utility/boxTitle.style.js","components/utility/boxTitle.js","components/utility/box.style.js","components/utility/box.js","components/utility/contentHolder.style.js","components/utility/contentHolder.js","assets/styles/constants.js","components/uielements/checkbox.js","components/uielements/styles/checkbox.style.js","components/uielements/styles/radiobox.style.js","components/uielements/radio.js"],"names":["SingleQuestion","props","showResult","e","setState","onRadioChange","answer","target","value","answerQuestion","state","setQuestionAnswer","alert","nextQuestion","this","question","answers","submitted","total","activeQuestion","correct","wrong","console","log","showAnswer","onChange","options","disabled","type","onClick","Component","MultipleQuestion","onCheckboxChange","Question","GettingStartedQuiz","startQuiz","rowStyle","basicStyle","colStyle","gutter","style","justify","md","sm","xs","title","id","connect","quiz","actions","useEffect","getQuestionData","questions","gettingStarted","data","LayoutContentWrapper","styled","div","className","children","BoxTitle","h3","palette","BoxSubTitle","p","subtitle","BoxWrapper","WDContentHolderWrapper","ContentHolderWrapper","WithDirection","colors","blue","deep","light","lighter","soft","black","shadow","grey","darker","dark","medium","N30","green","white","purple","orange","grid","width","display","flexFlow","marginBottom","checkbox","ComponentName","AntCheckbox","CheckboxGroup","Group","AntRadiobox","RadioBox","RadioGroup","RadioButton","Button"],"mappings":"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","file":"static/js/100.1ecfc3a6.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { RadioGroup } from '@iso/components/uielements/radio';\nimport Button from '@iso/components/uielements/button';\n\nexport default class SingleQuestion extends Component {\n  // Then we add our constructor which receives our props\n  constructor(props) {\n    super(props);\n    this.state = {\n      answer: '',\n      showResult: false,\n    };\n  }\n  showResult = (e) => {\n    this.setState({ showResult: true });\n  };\n  onRadioChange = (e) => {\n    this.setState({ answer: e.target.value });\n  };\n  answerQuestion = (e) => {\n    if (this.state.answer !== '') {\n      this.props.setQuestionAnswer(this.state.answer);\n    } else {\n      alert('Please select an answer');\n    }\n  };\n  nextQuestion = (e) => {\n    this.setState({ answer: '' });\n    this.props.nextQuestion();\n  };\n  // The render function, where we actually tell the browser what it should show\n  render() {\n    const {\n      question,\n      answers,\n      submitted,\n      total,\n      activeQuestion,\n      correct,\n      wrong,\n    } = this.props;\n    console.log(activeQuestion, 'active');\n    console.log(total, 'total');\n    return (\n      <div>\n        {!this.state.showResult ? (\n          <Fragment>\n            {' '}\n            {!question.showAnswer ? (\n              <Fragment>\n                <RadioGroup\n                  onChange={this.onRadioChange}\n                  options={question.options}\n                />\n                <Button type=\"primary\" onClick={this.answerQuestion}>\n                  Submit\n                </Button>\n              </Fragment>\n            ) : (\n              <Fragment>\n                <RadioGroup\n                  onChange={this.onRadioChange}\n                  options={question.options}\n                  disabled\n                />\n                {activeQuestion < total - 1 ? (\n                  <Button type=\"primary\" onClick={this.nextQuestion}>\n                    Next\n                  </Button>\n                ) : (\n                  <Button type=\"primary\" onClick={this.showResult}>\n                    Show Result\n                  </Button>\n                )}\n              </Fragment>\n            )}\n            {submitted && answers ? (\n              <Fragment>\n                <p>Correct answer!</p>\n              </Fragment>\n            ) : null}\n            {submitted && !answers ? (\n              <Fragment>\n                <p>Wrong answer! Correct Answer is :{question.answers}</p>\n              </Fragment>\n            ) : null}\n          </Fragment>\n        ) : (\n          <Fragment>\n            <p>Your correct answer: {correct}</p>\n            <p>Your wrong answer: {wrong}</p>\n          </Fragment>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component, Fragment } from 'react';\nimport { CheckboxGroup } from '@iso/components/uielements/checkbox';\nimport Button from '@iso/components/uielements/button';\n\nexport default class MultipleQuestion extends Component {\n  // Then we add our constructor which receives our props\n  constructor(props) {\n    super(props);\n    this.state = {\n      answer: '',\n      showResult: false,\n    };\n  }\n  onCheckboxChange = (e) => {\n    this.setState({ answer: e });\n  };\n  showResult = (e) => {\n    this.setState({ showResult: true });\n  };\n  answerQuestion = (e) => {\n    if (this.state.answer !== '') {\n      this.props.setQuestionAnswer(this.state.answer);\n    } else {\n      alert('Please select an answer');\n    }\n  };\n  nextQuestion = (e) => {\n    this.setState({ answer: '' });\n    this.props.nextQuestion();\n  };\n  // The render function, where we actually tell the browser what it should show\n  render() {\n    const {\n      question,\n      answers,\n      submitted,\n      total,\n      activeQuestion,\n      correct,\n      wrong,\n    } = this.props;\n    return (\n      <div>\n        {!this.state.showResult ? (\n          <Fragment>\n            {!question.showAnswer ? (\n              <Fragment>\n                <CheckboxGroup\n                  onChange={this.onCheckboxChange}\n                  options={question.options}\n                />\n                <Button type=\"primary\" onClick={this.answerQuestion}>\n                  Submit\n                </Button>\n              </Fragment>\n            ) : (\n              <Fragment>\n                <CheckboxGroup\n                  onChange={this.onCheckboxChange}\n                  options={question.options}\n                  disabled\n                />\n                {activeQuestion < total - 1 ? (\n                  <Button type=\"primary\" onClick={this.nextQuestion}>\n                    Next\n                  </Button>\n                ) : (\n                  <Button type=\"primary\" onClick={this.showResult}>\n                    Show Result\n                  </Button>\n                )}\n              </Fragment>\n            )}\n\n            {submitted && answers ? (\n              <Fragment>\n                <p>Correct answer!</p>\n              </Fragment>\n            ) : null}\n            {submitted && !answers ? (\n              <Fragment>\n                <p>Wrong answer! Correct Answer is :{question.answers}</p>\n              </Fragment>\n            ) : null}\n          </Fragment>\n        ) : (\n          <Fragment>\n            <p>Your correct answer: {correct}</p>\n            <p>Your wrong answer: {wrong}</p>\n          </Fragment>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport SingleQuestion from './SingleQuestion';\nimport MultipleQuestion from './MultipleQuestion';\n\nexport default class Question extends Component {\n  // The render function, where we actually tell the browser what it should show\n  render() {\n    const {\n      question,\n      answers,\n      submitted,\n      total,\n      activeQuestion,\n      wrong,\n      correct,\n    } = this.props;\n    if (question.type === 'single') {\n      return (\n        <SingleQuestion\n          question={question}\n          setQuestionAnswer={this.props.setQuestionAnswer}\n          nextQuestion={this.props.nextQuestion}\n          answers={answers}\n          correct={correct}\n          wrong={wrong}\n          total={total}\n          activeQuestion={activeQuestion}\n          submitted={submitted}\n        />\n      );\n    } else {\n      return (\n        <MultipleQuestion\n          question={question}\n          setQuestionAnswer={this.props.setQuestionAnswer}\n          nextQuestion={this.props.nextQuestion}\n          total={total}\n          correct={correct}\n          wrong={wrong}\n          activeQuestion={activeQuestion}\n          submitted={submitted}\n        />\n      );\n    }\n  }\n}\n","import React, { Component } from 'react';\nimport { Row, Col, Button } from 'antd';\nimport { connect } from 'react-redux';\nimport Box from '@iso/components/utility/box';\nimport LayoutWrapper from '@iso/components/utility/layoutWrapper.js';\nimport IntlMessages from '@iso/components/utility/intlMessages';\nimport basicStyle from '@iso/assets/styles/constants';\nimport actions from '@iso/redux/quiz/actions';\n\nclass GettingStartedQuiz extends Component {\n  startQuiz = e => {\n    this.props.startQuiz();\n  };\n  // The render function, where we actually tell the browser what it should show\n  render() {\n    const { rowStyle, colStyle, gutter } = basicStyle;\n    return (\n      <LayoutWrapper>\n        <Row style={rowStyle} gutter={gutter} justify=\"start\">\n          <Col md={24} sm={24} xs={24} style={colStyle}>\n            <Box title={<IntlMessages id=\"Getting started your quiz\" />}>\n              <Button type=\"primary\" onClick={this.startQuiz}>\n                Start Quiz\n              </Button>\n            </Box>\n          </Col>\n        </Row>\n      </LayoutWrapper>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    quiz: state.quiz,\n  };\n}\nexport default connect(mapStateToProps, { ...actions })(GettingStartedQuiz);\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Row, Col } from 'antd';\nimport ContentHolder from '@iso/components/utility/contentHolder';\nimport Box from '@iso/components/utility/box';\nimport LayoutWrapper from '@iso/components/utility/layoutWrapper.js';\nimport IntlMessages from '@iso/components/utility/intlMessages';\nimport basicStyle from '@iso/assets/styles/constants';\nimport actions from '@iso/redux/quiz/actions';\nimport Question from './Question';\nimport GettingStartedQuiz from './GettingStartedQuiz';\n\n// const { getQuizData } = actions;\n\nfunction SingleQuiz(props) {\n  useEffect(() => {\n    props.getQuestionData();\n  }, [props]);\n  const { rowStyle, colStyle, gutter } = basicStyle;\n  const {\n    questions,\n    activeQuestion,\n    total,\n    submitted,\n    answers,\n    correct,\n    wrong,\n    gettingStarted,\n  } = props.quiz;\n  console.log(wrong);\n  console.log(correct);\n  return (\n    <LayoutWrapper>\n      <Row style={rowStyle} gutter={gutter} justify=\"start\">\n        <Col md={24} sm={24} xs={24} style={colStyle}>\n          {questions.data ? (\n            gettingStarted ? (\n              <Box\n                title={\n                  <IntlMessages id={questions.data[activeQuestion].question} />\n                }\n              >\n                <ContentHolder>\n                  <Question\n                    question={questions.data[activeQuestion]}\n                    setQuestionAnswer={props.setQuestionAnswer}\n                    nextQuestion={props.nextQuestion}\n                    correct={correct}\n                    wrong={wrong}\n                    answers={answers}\n                    total={total}\n                    activeQuestion={activeQuestion}\n                    submitted={submitted}\n                  />\n                </ContentHolder>\n              </Box>\n            ) : (\n              <GettingStartedQuiz gettingStarted={gettingStarted} />\n            )\n          ) : null}\n        </Col>\n      </Row>\n    </LayoutWrapper>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    quiz: state.quiz,\n  };\n}\nexport default connect(mapStateToProps, { ...actions })(SingleQuiz);\n","import styled from 'styled-components';\n\nconst LayoutContentWrapper = styled.div`\n  padding: 40px 20px;\n  display: flex;\n  flex-flow: row wrap;\n  overflow: hidden;\n\n  @media only screen and (max-width: 767px) {\n    padding: 50px 20px;\n  }\n\n  @media (max-width: 580px) {\n    padding: 15px;\n  }\n`;\n\nexport { LayoutContentWrapper };\n","import React from 'react';\nimport { LayoutContentWrapper } from './layoutWrapper.style';\n\nexport default props => (\n  <LayoutContentWrapper\n    className={\n      props.className != null\n        ? `${props.className} isoLayoutContentWrapper`\n        : 'isoLayoutContentWrapper'\n    }\n    {...props}\n  >\n    {props.children}\n  </LayoutContentWrapper>\n);\n","import styled from 'styled-components';\nimport { palette } from 'styled-theme';\n\nconst BoxTitle = styled.h3`\n  font-size: 14px;\n  font-weight: 500;\n  color: ${palette('text', 0)};\n  margin: 0;\n  margin-bottom: 5px;\n`;\n\nconst BoxSubTitle = styled.p`\n  font-size: 13px;\n  font-weight: 400;\n  color: ${palette('text', 3)};\n  line-height: 24px;\n`;\n\nexport { BoxTitle, BoxSubTitle };\n","import React from 'react';\nimport { BoxTitle, BoxSubTitle } from './boxTitle.style';\n\nexport default props => {\n  return (\n    <div>\n      {props.title ? (\n        <BoxTitle className=\"isoBoxTitle\"> {props.title} </BoxTitle>\n      ) : (\n        ''\n      )}\n      {props.subtitle ? (\n        <BoxSubTitle className=\"isoBoxSubTitle\"> {props.subtitle} </BoxSubTitle>\n      ) : (\n        ''\n      )}\n    </div>\n  );\n};\n","import styled from 'styled-components';\nimport { palette } from 'styled-theme';\n\nconst BoxWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  padding: 20px;\n  background-color: #ffffff;\n  border: 1px solid ${palette('border', 0)};\n  margin: 0 0 30px;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n\n  @media only screen and (max-width: 767px) {\n    padding: 20px;\n    ${'' /* margin: 0 10px 30px; */};\n  }\n\n  &.half {\n    width: calc(50% - 34px);\n    @media (max-width: 767px) {\n      width: 100%;\n    }\n  }\n`;\n\nexport { BoxWrapper };\n","import React from 'react';\nimport BoxTitleWrapper from './boxTitle';\nimport { BoxWrapper } from './box.style';\n\nexport default props => (\n  <BoxWrapper\n    className={`${props.className ? props.className : ''} isoBoxWrapper`}\n    style={props.style}\n  >\n    <BoxTitleWrapper title={props.title} subtitle={props.subtitle} />\n    {props.children}\n  </BoxWrapper>\n);\n","import styled from 'styled-components';\nimport { palette } from 'styled-theme';\nimport WithDirection from '@iso/lib/helpers/rtl';\nconst WDContentHolderWrapper = styled.div`\n  margin-top: 30px;\n  -webkit-overflow-scrolling: touch;\n\n  .demoBtn {\n    margin-right: ${props => (props['data-rtl'] === 'rtl' ? '0' : '10px')};\n    margin-left: ${props => (props['data-rtl'] === 'rtl' ? '10px' : '0')};\n  }\n\n  .demoBtnsWrapper {\n    &:nth-child(1) {\n      margin-left: ${props => (props['data-rtl'] === 'rtl' ? '0' : '70px')};\n      margin-right: ${props => (props['data-rtl'] === 'rtl' ? '70px' : '0')};\n      white-space: nowrap;\n    }\n\n    &:nth-child(2) {\n      width: 70px;\n      float: ${props => (props['data-rtl'] === 'rtl' ? 'right' : 'left')};\n    }\n\n    &:nth-child(3) {\n      width: 70px;\n      margin-left: ${props => (props['data-rtl'] === 'rtl' ? '0' : '295px')};\n      margin-right: ${props => (props['data-rtl'] === 'rtl' ? '295px' : '0')};\n    }\n\n    &:nth-child(4) {\n      margin-left: ${props => (props['data-rtl'] === 'rtl' ? '0' : '70px')};\n      margin-right: ${props => (props['data-rtl'] === 'rtl' ? '70px' : '0')};\n      clear: both;\n      white-space: nowrap;\n    }\n\n    @media only screen and (max-width: 480px) {\n      margin-left: ${props =>\n        props['data-rtl'] === 'rtl' ? '8px' : '0 !important'};\n      white-space: nowrap;\n      margin-right: ${props =>\n        props['data-rtl'] === 'rtl' ? '0 !important' : '8px'};\n      float: none !important;\n    }\n\n    .demoPosBtn {\n      width: 70px;\n      margin-right: ${props => (props['data-rtl'] === 'rtl' ? '0' : '8px')};\n      margin-left: ${props => (props['data-rtl'] === 'rtl' ? '8px' : '0')};\n      margin-bottom: 8px;\n      padding: 0;\n\n      @media only screen and (max-width: 480px) {\n        width: 65px;\n      }\n    }\n  }\n\n  .ant-btn {\n    &:not(.demoPosBtn) {\n      &:last-child {\n        margin-right: 0;\n      }\n    }\n  }\n\n  .tooltipBtn {\n    display: inline-block;\n    line-height: 32px;\n    height: 32px;\n    width: 70px;\n    font-size: 14px;\n    text-align: center;\n    background: ${palette('secondary', 1)};\n    margin-right: ${props => (props['data-rtl'] === 'rtl' ? 'auto' : '6px')};\n    margin-left: ${props => (props['data-rtl'] === 'rtl' ? '6px' : '0')};\n    margin-bottom: 6px;\n    border-radius: 6px;\n  }\n\n  .ant-progress {\n    &.ant-progress-circle {\n      margin-right: ${props => (props['data-rtl'] === 'rtl' ? '0' : '15px')};\n      margin-left: ${props => (props['data-rtl'] === 'rtl' ? '15px' : '0')};\n\n      &:last-child {\n        margin-right: ${props => (props['data-rtl'] === 'rtl' ? '0' : '0')};\n        margin-left: ${props => (props['data-rtl'] === 'rtl' ? '0' : '0')};\n      }\n    }\n  }\n\n  strong {\n    font-weight: 700;\n    font-size: 14px;\n  }\n`;\n\nconst ContentHolderWrapper = WithDirection(WDContentHolderWrapper);\n\nexport { ContentHolderWrapper };\n","import React from 'react';\nimport { ContentHolderWrapper } from './contentHolder.style';\n\nexport default props => (\n  <ContentHolderWrapper className=\"isoExampleWrapper\" style={props.style}>\n    {props.children}\n  </ContentHolderWrapper>\n);\n","export const colors = {\n  blue: {\n    deep: 'rgb(0, 121, 191)',\n    light: 'lightblue',\n    lighter: '#d9fcff',\n    soft: '#E6FCFF',\n  },\n  black: '#4d4d4d',\n  shadow: 'rgba(0,0,0,0.2)',\n  grey: {\n    darker: '#C1C7D0',\n    dark: '#E2E4E6',\n    medium: '#DFE1E5',\n    N30: '#EBECF0',\n    light: '#F4F5F7',\n  },\n  green: 'rgb(185, 244, 188)',\n  white: 'white',\n  purple: 'rebeccapurple',\n  orange: '#FF991F',\n};\nexport const grid = 8;\n\nexport const borderRadius = 2;\nconst rowStyle = {\n  width: '100%',\n  display: 'flex',\n  flexFlow: 'row wrap',\n};\nconst colStyle = {\n  marginBottom: '16px',\n};\nconst gutter = 16;\n\nconst basicStyle = {\n  rowStyle,\n  colStyle,\n  gutter,\n};\nexport default basicStyle;\n","import { Checkbox } from 'antd';\nimport AntCheckbox from './styles/checkbox.style';\n\nconst checkbox = AntCheckbox(Checkbox);\nconst CheckboxGroup = Checkbox.Group;\n\nexport default checkbox;\nexport { CheckboxGroup };\n","import styled from 'styled-components';\nimport { palette } from 'styled-theme';\n\nconst AntCheckbox = (ComponentName) => styled(ComponentName)`\n  &.ant-checkbox-wrapper {\n    font-size: 13px;\n    color: ${palette('text', 1)};\n    vertical-align: middle;\n  }\n`;\n\nexport default AntCheckbox;\n","import styled from 'styled-components';\nimport { palette } from 'styled-theme';\n\nconst AntRadiobox = (ComponentName) => styled(ComponentName)`\n  &.ant-radio-wrapper,\n  .ant-radio-wrapper,\n  &.ant-radio-button-wrapper {\n    font-size: 13px;\n    color: ${palette('text', 1)};\n\n    .ant-radio-inner {\n      &:after {\n        width: 6px;\n        height: 6px;\n        top: 4px;\n        left: 4px;\n        background-color: ${palette('primary', 0)};\n        border-radius: 50%;\n      }\n    }\n\n    .ant-radio-checked .ant-radio-inner,\n    .ant-radio-indeterminate .ant-radio-inner {\n      border-color: ${palette('primary', 0)};\n    }\n\n    .ant-radio:hover .ant-radio-inner,\n    .ant-radio-input:focus + .ant-radio-inner {\n      border-color: ${palette('primary', 0)};\n    }\n\n    .ant-radio-disabled .ant-radio-inner:after {\n      background-color: #ccc;\n    }\n\n    &:hover {\n      .ant-radio-inner {\n        border-color: ${palette('primary', 0)};\n      }\n    }\n\n    .ant-radio-checked {\n      .ant-radio-inner {\n        &:after {\n          transform: scale(1);\n        }\n      }\n    }\n  }\n\n  .ant-radio-button-wrapper {\n    &.ant-radio-button-wrapper-checked {\n      color: #ffffff;\n      background-color: ${palette('primary', 0)};\n      border-color: ${palette('primary', 0)};\n\n      &:not(.ant-radio-button-wrapper-disabled) {\n        /* background-color: ${palette('primary', 0)}; */\n        border-color: ${palette('primary', 0)};\n\n        &:hover {\n          /* background-color: ${palette('primary', 0)}; */\n          border-color: ${palette('primary', 0)};\n        }\n      }\n\n    }\n    :focus{\n      outline:none;\n    }\n  }\n`;\n\nexport default AntRadiobox;\n","import { Radio } from 'antd';\nimport AntRadiobox from './styles/radiobox.style';\n\nconst RadioBox = AntRadiobox(Radio);\nconst RadioGroup = AntRadiobox(Radio.Group);\nconst RadioButton = AntRadiobox(Radio.Button);\n\nexport default RadioBox;\nexport { RadioGroup, RadioButton };\n"],"sourceRoot":""}