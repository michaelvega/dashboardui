{"version":3,"sources":["containers/Note/Note.styles.js","containers/Note/NoteList.js","containers/Note/Note.js","components/Notification.js","../node_modules/antd/es/notification/style/css.js","components/ColorChooser.style.js","components/ColorChoser.js","components/EditableComponent.js"],"names":["NoteComponentWrapper","styled","div","props","palette","borderRadius","transition","NoteListSidebar","WithDirection","NoteListWrapper","React","useState","search","setSearch","notes","toUpperCase","filter","note","includes","filterNotes","className","placeholder","value","onChange","event","target","length","style","height","map","selectedId","deleteNote","changeNote","colors","activeClass","id","key","width","background","color","onClick","timeDifference","createTime","icon","CloseOutlined","type","singleNote","noteActions","addNote","editNote","changeColor","Header","Content","Notes","useSelector","state","seectedColor","dispatch","useDispatch","selectedNote","undefined","NoteList","v","autoFocus","createNotification","message","description","ColorChooserDropdown","visible","setVisibility","content","index","trigger","onVisibleChange","backgroundColor","EditableComponent","editable","setState","check","itemKey","rows","onPressEnter","CheckOutlined","EditOutlined"],"mappings":"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","file":"static/js/111.95124194.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport { palette } from 'styled-theme';\nimport { transition, borderRadius } from '@iso/lib/helpers/style_utils';\nimport WithDirection from '@iso/lib/helpers/rtl';\n\nconst NoteComponentWrapper = styled.div`\n  padding: 50px 35px;\n  display: flex;\n  height: 100%;\n  min-height: 300px;\n  background: none;\n\n  @media only screen and (max-width: 767px) {\n    padding: 40px 20px;\n    height: auto;\n    flex-direction: column;\n\n    &.ant-layout.ant-layout-has-sider {\n      flex-direction: column;\n    }\n  }\n\n  @media only screen and (min-width: 767px) and (max-width: 990px) {\n    padding: 50px 20px;\n  }\n\n  .isoNoteListSidebar {\n    display: flex;\n    flex-direction: column;\n    flex-shrink: 0;\n    ${'' /* height: 100%; */} background: #ffffff;\n    border-right: ${(props) => (props['data-rtl'] === 'rtl' ? 0 : 1)}px solid\n      ${palette('border', 0)};\n    border-left: ${(props) => (props['data-rtl'] === 'rtl' ? 1 : 0)}px solid\n      ${palette('border', 0)};\n\n    @media only screen and (min-width: 767px) and (max-width: 990px) {\n      width: 260px !important;\n      flex: 0 0 260px !important;\n      max-width: none !important;\n      min-width: 0 !important;\n    }\n    @media only screen and (max-width: 767px) {\n      width: auto !important;\n      max-width: 100% !important;\n      min-width: 0 !important;\n      margin-bottom: 30px;\n      flex: 0 !important;\n      overflow: hidden;\n      overflow-y: auto;\n    }\n  }\n\n  .isoNotepadWrapper {\n    background: #ffffff;\n\n    .isoHeader {\n      height: auto;\n      line-height: inherit;\n      padding: 20px 30px;\n      display: flex;\n      align-items: center;\n      justify-content: flex-start;\n      flex-wrap: wrap;\n      flex-direction: row;\n      background-color: #ffffff;\n      border-bottom: 1px solid ${palette('border', 0)};\n\n      @media only screen and (max-width: 480px) {\n        padding: 20px;\n      }\n\n      @media only screen and (max-width: 400px) {\n        flex-direction: column;\n        justify-content: center;\n        align-items: flex-start;\n      }\n\n      .isoColorChooseWrapper {\n        display: flex;\n        align-items: center;\n        justify-content: flex-start;\n        flex-direction: row;\n        margin-right: ${(props) =>\n          props['data-rtl'] === 'rtl' ? 'inherit' : 'auto'};\n        margin-left: ${(props) =>\n          props['data-rtl'] === 'rtl' ? 'auto' : 'inherit'};\n\n        span {\n          font-size: 13px;\n          color: ${palette('grayscale', 0)};\n        }\n\n        .isoColorChooser {\n          width: 20px;\n          height: 20px;\n          cursor: pointer;\n          border: 0;\n          margin: ${(props) =>\n            props['data-rtl'] === 'rtl' ? '0 0 0 15px' : '0 15px 0 0'};\n          padding: 0;\n          ${borderRadius('3px')};\n\n          &:empty {\n            visibility: visible;\n          }\n        }\n      }\n\n      .isoAddNoteBtn {\n        background-color: ${palette('primary', 0)};\n        border: 0;\n        padding: 5px 15px;\n        margin-left: ${(props) =>\n          props['data-rtl'] === 'rtl' ? 'inherit' : 'auto'};\n        margin-right: ${(props) =>\n          props['data-rtl'] === 'rtl' ? 'auto' : 'inherit'};\n        ${borderRadius('3px')};\n        ${transition()};\n\n        @media only screen and (max-width: 400px) {\n          margin: ${(props) =>\n            props['data-rtl'] === 'rtl' ? '15px 0 0 0' : '15px 0 0 0'};\n        }\n\n        span {\n          font-size: 12px;\n          font-weight: 400;\n          padding: 0;\n          text-transform: uppercase;\n          color: #ffffff;\n        }\n\n        &:hover {\n          background-color: ${palette('primary', 1)};\n        }\n      }\n    }\n\n    .isoNoteEditingArea {\n      display: flex;\n      height: 100%;\n\n      @media (max-width: 800px) {\n        height: 300px;\n      }\n\n      .isoNoteTextbox {\n        font-size: 14px;\n        color: ${palette('text', 2)};\n        line-height: 24px;\n        width: 100%;\n        height: calc(100% - 30px);\n        border: 0;\n        outline: 0;\n        padding: 20px 30px;\n        resize: none;\n\n        &:focus {\n          box-shadow: none;\n        }\n\n        @media only screen and (max-width: 480px) {\n          padding: 20px;\n        }\n      }\n    }\n\n    @media (max-width: 767px) {\n      .isoNoteListSidebar.ant-layout-sider {\n        width: auto !important;\n        margin-bottom: 30px;\n        flex: 0 0 450px !important;\n      }\n    }\n  }\n`;\n\nconst NoteListSidebar = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  max-height: calc(100vh - 160px);\n\n  @media only screen and (max-width: 767px) {\n    max-height: 60vh;\n  }\n\n  .isoSearchNotes {\n    flex-shrink: 0;\n    max-height: none;\n    width: 100%;\n    height: 77px;\n    padding: 0 15px;\n    padding-left: ${(props) => (props['data-rtl'] === 'rtl' ? '15px' : '35px')};\n    padding-right: ${(props) =>\n      props['data-rtl'] === 'rtl' ? '35px' : '15px'};\n    border: 0;\n    border-bottom: 1px solid rgba(230, 230, 230, 0.7);\n    outline: 0 !important;\n    /* overflow: hidden; */\n    background-color: #ffffff;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n    border-radius: 0;\n    box-shadow: none;\n    ${transition()};\n\n    @media only screen and (max-width: 767px) {\n      height: 50px;\n    }\n\n    .ant-input-group {\n      height: 100%;\n    }\n\n    &.ant-input-affix-wrapper:focus,\n    &.ant-input-affix-wrapper-focused {\n      border-color: rgba(230, 230, 230, 0.7);\n    }\n\n    .ant-input {\n      font-size: 14px;\n      font-weight: 400;\n      color: ${palette('text', 0)};\n      line-height: inherit;\n      padding: 0;\n      border: 0;\n      height: 100%;\n\n      &:focus {\n        box-shadow: none;\n        outline: none;\n      }\n    }\n\n    &:hover,\n    &:focus {\n      .ant-input {\n        border-color: rgba(230, 230, 230, 0.7) !important;\n      }\n    }\n\n    .ant-input-group-addon {\n      background: transparent;\n\n      button {\n        border: 0;\n      }\n    }\n  }\n\n  .ant-input-suffix {\n    left: ${(props) => (props['data-rtl'] === 'rtl' ? 'auto' : '10px')};\n    right: ${(props) => (props['data-rtl'] === 'rtl' ? '10px' : 'auto')};\n    color: ${palette('grayscale', 0)};\n\n    .ant-input-search-icon {\n      &:before {\n        display: none;\n      }\n    }\n  }\n\n  .isoNoteList {\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    max-height: 100%;\n    overflow: hidden;\n    overflow-y: auto;\n\n    .isoList {\n      width: 100%;\n      margin: 0;\n      display: flex;\n      justify-content: flex-start;\n      flex-shrink: 0;\n      padding: 0;\n      border-bottom: 1px solid ${palette('border', 0)};\n      text-align: ${(props) =>\n        props['data-rtl'] === 'rtl' ? 'right' : 'left'};\n      position: relative;\n\n      &.active {\n        background-color: ${palette('secondary', 1)};\n      }\n\n      .isoNoteBGColor {\n        width: 5px;\n        display: flex;\n        margin: ${(props) =>\n          props['data-rtl'] === 'rtl' ? '0 0 0 15px' : '0 15px 0 0'};\n        flex-shrink: 0;\n      }\n\n      .isoNoteText {\n        width: calc(100% - 60px);\n        margin: ${(props) =>\n          props['data-rtl'] === 'rtl' ? '0 0 0 20px' : '0 20px 0 0'};\n        padding: 20px 0;\n        cursor: pointer;\n\n        h3 {\n          width: 100%;\n          white-space: nowrap;\n          text-overflow: ellipsis;\n          overflow: hidden;\n          color: ${palette('secondary', 2)};\n          font-weight: 500;\n        }\n\n        .isoNoteCreatedDate {\n          font-size: 13px;\n          color: ${palette('grayscale', 0)};\n        }\n      }\n\n      .isoDeleteBtn {\n        width: 24px;\n        height: 24px;\n        background-color: transparent;\n        flex-shrink: 0;\n        position: absolute;\n        top: 5px;\n        right: ${(props) => (props['data-rtl'] === 'rtl' ? 'inherit' : '5px')};\n        left: ${(props) => (props['data-rtl'] === 'rtl' ? '5px' : 'inherit')};\n        padding: 0;\n        border: 0;\n        font-size: 14px;\n        color: ${palette('grayscale', 0)};\n        ${transition()};\n\n        &:hover {\n          color: ${palette('primary', 0)};\n        }\n      }\n    }\n\n    .isoNotlistNotice {\n      font-size: 14px;\n      font-weight: 400;\n      color: ${palette('grayscale', 0)};\n      line-height: inherit;\n      padding: 30px 20px;\n    }\n\n    .isoNoResultMsg {\n      padding: 15px 20px;\n      text-align: center;\n      color: ${palette('secondary', 2)};\n      font-weight: 500;\n      font-size: 14px;\n    }\n  }\n`;\n\nexport default WithDirection(NoteComponentWrapper);\nconst NoteListWrapper = WithDirection(NoteListSidebar);\nexport { NoteListWrapper };\n","import React from 'react';\nimport { timeDifference } from '@iso/lib/helpers/utility';\nimport Button from '@iso/components/uielements/button';\nimport { InputSearch } from '@iso/components/uielements/input';\nimport { NoteListWrapper } from './Note.styles';\nimport Scrollbars from '@iso/components/utility/customScrollBar';\nimport { CloseOutlined } from '@ant-design/icons';\nfunction filterNotes(notes, search) {\n  search = search.toUpperCase();\n  if (search) {\n    return notes.filter((note) => note.note.toUpperCase().includes(search));\n  }\n  return notes;\n}\nexport default function (props) {\n  const [search, setSearch] = React.useState('');\n\n  function singleNote(note) {\n    const { selectedId, deleteNote, changeNote, colors } = props;\n\n    const activeClass = selectedId === note.id ? 'active' : '';\n    const onChange = () => changeNote(note.id);\n    const onDelete = () => deleteNote(note.id);\n    return (\n      <div className={`isoList ${activeClass}`} key={note.id}>\n        <div\n          className=\"isoNoteBGColor\"\n          style={{ width: '5px', background: colors[note.color] }}\n        />\n        <div className=\"isoNoteText\" onClick={onChange}>\n          <h3>{note.note}</h3>\n          <span className=\"isoNoteCreatedDate\">\n            {timeDifference(note.createTime)}\n          </span>\n        </div>\n        <Button\n          className=\"isoDeleteBtn\"\n          icon={<CloseOutlined />}\n          type=\"default\"\n          onClick={onDelete}\n        />\n      </div>\n    );\n  }\n  function onChange(event) {\n    setSearch(event.target.value);\n  }\n  const notes = filterNotes(props.notes, search);\n  return (\n    <NoteListWrapper className=\"isoNoteListWrapper\">\n      <InputSearch\n        placeholder=\"Search Notes\"\n        className=\"isoSearchNotes\"\n        value={search}\n        onChange={onChange}\n      />\n      <div className=\"isoNoteList\">\n        {notes && notes.length > 0 ? (\n          <Scrollbars style={{ height: 'calc(100vh - 70px)' }}>\n            {notes.map((note) => singleNote(note))}\n          </Scrollbars>\n        ) : (\n          <span className=\"isoNoResultMsg\">No note found</span>\n        )}\n      </div>\n    </NoteListWrapper>\n  );\n}\n","import React from 'react';\nimport { Layout } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport noteActions from '@iso/redux/notes/actions';\nimport NoteList from './NoteList';\nimport { ColorChoser } from '@iso/components/';\nimport Button from '@iso/components/uielements/button';\nimport IntlMessages from '@iso/components/utility/intlMessages';\nimport NoteComponentWrapper from './Note.styles';\nimport { Textarea } from '@iso/components/uielements/input';\n\nconst { changeNote, addNote, editNote, deleteNote, changeColor } = noteActions;\nconst { Header, Content } = Layout;\nexport default function Notes() {\n  const { notes, selectedId, colors, seectedColor } = useSelector(\n    (state) => state.Notes\n  );\n  const dispatch = useDispatch();\n  function updateNote(event) {\n    dispatch(editNote(selectedId, event.target.value));\n  }\n  const selectedNote =\n    selectedId !== undefined\n      ? notes.filter((note) => note.id === selectedId)[0]\n      : null;\n  return (\n    <NoteComponentWrapper className=\"isomorphicNoteComponent\">\n      <div style={{ width: '340px' }} className=\"isoNoteListSidebar\">\n        <NoteList\n          notes={notes}\n          selectedId={selectedId}\n          changeNote={(id) => dispatch(changeNote(id))}\n          deleteNote={(id) => dispatch(deleteNote(id))}\n          colors={colors}\n        />\n      </div>\n      <Layout className=\"isoNotepadWrapper\">\n        <Header className=\"isoHeader\">\n          {selectedId !== undefined ? (\n            <div className=\"isoColorChooseWrapper\">\n              <ColorChoser\n                colors={colors}\n                changeColor={(v) => dispatch(changeColor(v))}\n                seectedColor={seectedColor}\n              />\n              <span>\n                <IntlMessages id=\"notes.ChoseColor\" />\n              </span>\n            </div>\n          ) : (\n            ''\n          )}\n          <Button\n            type=\"primary\"\n            className=\"isoAddNoteBtn\"\n            onClick={() => dispatch(addNote())}\n          >\n            <IntlMessages id=\"notes.addNote\" />\n          </Button>\n        </Header>\n        <Content className=\"isoNoteEditingArea\">\n          {selectedId !== undefined ? (\n            <Textarea\n              className=\"isoNoteTextbox\"\n              value={selectedNote.note}\n              onChange={updateNote}\n              autoFocus\n            />\n          ) : (\n            ''\n          )}\n          {/*{selectedId !== undefined ? <span>{`created at ${selectedNote.createTime}`}</span> : ''}*/}\n        </Content>\n      </Layout>\n    </NoteComponentWrapper>\n  );\n}\n","import { notification } from 'antd';\n\nconst createNotification = (type, message, description) => {\n  notification[type]({\n    message,\n    description,\n  });\n};\nexport default createNotification;\n","import '../../style/index.css';\nimport './index.css';","import styled from 'styled-components';\nimport { borderRadius } from '@iso/lib/helpers/style_utils';\nimport WithDirection from '@iso/lib/helpers/rtl';\nconst ColorChooserDropdown = styled.div`\n  display: flex;\n  flex-flow: row wrap;\n  max-width: 160px;\n\n  .ant-btn {\n    width: 20px;\n    height: 20px;\n    border: 0;\n    outline: 0;\n    padding: 0;\n    margin: ${(props) =>\n      props['data-rtl'] === 'rtl' ? '0 0 0 15px' : '0 15px 0 0'};\n    ${borderRadius('3px')};\n\n    &:empty {\n      visibility: visible;\n    }\n\n    &:last-child {\n      margin: 0;\n    }\n\n    &:nth-child(n + 6) {\n      margin-top: 15px;\n    }\n\n    &:nth-child(5n) {\n      margin-right: 0;\n      margin-left: 0;\n    }\n  }\n`;\n\nexport default WithDirection(ColorChooserDropdown);\n","import React from 'react';\nimport { Button } from 'antd';\nimport Popover from './uielements/popover';\nimport ColorChooserDropdown from './ColorChooser.style';\n\nexport default function ({ colors, seectedColor, changeColor }) {\n  const [visible, setVisibility] = React.useState(false);\n\n  function hide() {\n    setVisibility(false);\n  }\n  function handleVisibleChange() {\n    setVisibility((visible) => !visible);\n  }\n  const content = () => (\n    <ColorChooserDropdown className=\"isoColorOptions\">\n      {colors.map((color, index) => {\n        const onClick = () => {\n          hide();\n          changeColor(index);\n        };\n        const style = {\n          background: color,\n        };\n        return <Button key={index} onClick={onClick} style={style} />;\n      })}\n    </ColorChooserDropdown>\n  );\n  return (\n    <Popover\n      content={content()}\n      trigger=\"click\"\n      visible={visible}\n      onVisibleChange={handleVisibleChange}\n    >\n      <Button\n        style={{ backgroundColor: colors[seectedColor] }}\n        className=\"isoColorChooser\"\n      />\n    </Popover>\n  );\n}\n","import React from 'react';\nimport { CheckOutlined, EditOutlined } from '@ant-design/icons';\nimport { Textarea as Input } from './uielements/input';\n\nexport default function EditableComponent(props) {\n  const [state, setState] = React.useState({\n    value: props.value,\n    editable: false,\n  });\n\n  function handleChange(event) {\n    const value = event.target.value;\n    setState({ ...state, value });\n  }\n  function check() {\n    setState({ ...state, editable: false });\n    if (props.onChange) {\n      props.onChange(props.itemKey, state.value);\n    }\n  }\n  function edit() {\n    setState({ ...state, editable: true });\n  }\n\n  const { value, editable } = state;\n  return (\n    <div className=\"isoNoteContent\">\n      {editable ? (\n        <div className=\"isoNoteEditWrapper\">\n          <Input\n            rows={3}\n            value={value}\n            onChange={handleChange}\n            onPressEnter={check}\n          />\n          <CheckOutlined className=\"isoNoteEditIcon\" onClick={check} />\n        </div>\n      ) : (\n        <p className=\"isoNoteTextWrapper\" onClick={edit}>\n          {value || ' '}\n          <EditOutlined className=\"isoNoteEditIcon\" />\n        </p>\n      )}\n    </div>\n  );\n}\n"],"sourceRoot":""}